{"version":3,"sources":["DB.js","Clock.js","Weather.js","Popup.js","City.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["cities","id","city","pic","time","checkTime","i","Clock","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","date","_this2","today","Date","h","getHours","props","m","getMinutes","s","getSeconds","setState","timeout","setTimeout","startTime","clearTimeout","react_default","a","createElement","Fragment","React","Component","Weather","temp","axios","get","then","res","Math","floor","data","main","Popup","modal","toggle","bind","assertThisInitialized","prevState","externalCloseBtn","className","style","position","top","right","onClick","Button","color","buttonLabel","Modal","isOpen","external","ModalHeader","Weather_Weather","ModalBody","ModalFooter","City","img","map","Col","md","key","Card","inverse","margin","CardImg","width","height","src","alt","CardImgOverlay","src_Popup","CardTitle","textShadow","textAlign","fontSize","CardText","Clock_Clock","Row","Header","Navbar","backgroundColor","letterSpacing","fontFamily","light","expand","NavbarBrand","href","fontWeight","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","App","Header_Header","City_City","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8bee973.chunk.js","sourcesContent":["const cities= [{\n    id: 'sa',\n    city: 'Riyadh',\n    pic:'https://imgur.com/6SXeDa8.jpg',\n    time: 0\n  },\n  {\n    id: 'us',\n    city: 'New York',\n    pic:'https://www.nationalgeographic.com/content/dam/travel/Guide-Pages/north-america/united-states/newyork/newyork_NationalGeographic_2328428.adapt.1900.1.jpg',\n    time: -7\n  },\n  {\n    id: 'jp',\n    city: 'Tokyo',\n    pic:'https://imgur.com/BYLrmXM.jpg',\n    time: 6\n  },{\n    id: 'kr',\n    city: 'Seoul',\n    pic:'https://imgur.com/NUNDa97.jpg',\n    time: 6\n  },{\n    id: 'uk',\n    city: 'London',\n    pic:'https://imgur.com/tW0gmn9.jpg',\n    time: -2\n  },{\n    id: 'de',\n    city: 'Berlin',\n    pic:'https://imgur.com/EBFI75U.jpg',\n    time: -1\n  },{\n    id: 'fr',\n    city: 'Paris',\n    pic:'https://imgur.com/RyfnhQT.jpg',\n    time: -1\n  },{\n    id: 'gr',\n    city: 'Athens',\n    pic:'https://imgur.com/SdStD7q.jpg',\n    time: 0\n  },{\n    id: 'ae',\n    city: 'Dubai',\n    pic:'https://imgur.com/j8uiVSb.jpg',\n    time: 1\n  },{\n    id: 'cn',\n    city: 'Beijing',\n    pic:'https://imgur.com/d7uexKN.jpg',\n    time: 5\n  },{\n    id: 'hk',\n    city: 'Hong Kong',\n    pic:'https://imgur.com/hv2MgYp.jpg',\n    time: 5\n  },{\n    id: 'ng',\n    city: 'Abuja',\n    pic:'https://i.imgur.com/HOAC0ow.jpg',\n    time: -2\n  },{\n    id: 'au',\n    city: 'Sydney',\n    pic:'https://imgur.com/AJnU1a0.jpg',\n    time: 8\n  },{\n    id: 'ca',\n    city: 'Toronto',\n    pic:'https://imgur.com/qSlXtx0.jpg',\n    time: -8\n  },{\n    id: 'ru',\n    city: 'Moscow',\n    pic:'https://imgur.com/7CMWULA.jpg',\n    time: 3\n  },{\n    id: 'tr',\n    city: 'Istanbul',\n    pic:'https://imgur.com/w2xvvJ2.jpg',\n    time: 0\n  },{\n    id: 'eg',\n    city: 'Cairo',\n    pic:'https://imgur.com/EJpvqHM.jpg',\n    time: -1\n  },{\n    id: 'nz',\n    city: 'Wellington',\n    pic:'https://imgur.com/NfTyANK.jpg',\n    time: 10\n  },{\n    id: 'za',\n    city: 'Cape Town',\n    pic:'https://imgur.com/NgBvP3g.jpg',\n    time: -1\n  },{\n    id: 'it',\n    city: 'Rome',\n    pic:'https://imgur.com/LvsolhW.jpg',\n    time: -1\n  }]  \n  export default cities;","import React from \"react\";\n\n\nfunction checkTime(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nexport default class Clock extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: ``\n    };\n  }\n\n  startTime() {\n    const today = new Date();\n    const h = today.getHours() + (this.props.time) ;\n    const m = checkTime(today.getMinutes());\n    const s = checkTime(today.getSeconds());\n\n    this.setState({ date: h + \":\" + m + \":\" + s });\n    this.timeout = setTimeout(() => this.startTime(), 500);\n  }\n\n  componentDidMount() {\n    this.startTime();\n  }\n  componentWillUnmount() {\n    if (!this.timeout) return;\n    clearTimeout(this.timeout);\n  }\n  render() {\n    // console.log(this.props.time)\n    return( <React.Fragment>{this.state.date}</React.Fragment>);\n\n    \n  }\n}\n","// https://api.openweathermap.org/data/2.5/weather?q=riyadh&appid=e5641209c168c9ca6b5e2aed090e203d\n\n\n// https://newsapi.org/v2/top-headlines?country=kr&language=en&apiKey=4102d268d5a14bd6bb780903083fc404\n\n// http://geodb-free-service.wirefreethought.com/v1/geo/cities/802\n\n// /v1/geo/cities?limit=5&offset=0\n\n// v1/geo/cities/{cityId}\n\nimport React from 'react';\n\nimport axios from 'axios';\n\nexport default class Weather extends React.Component {\n  state ={\n      temp:[]\n  }\n\n  componentDidMount() {\n      if (this.props.city){\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.props.city}&units=metric&appid=e5641209c168c9ca6b5e2aed090e203d`)\n      .then(res => {\n        //   let celTemp = res.data.main.temp\n       \n        this.setState({\n            temp: Math.floor(res.data.main.temp)\n        })\n        // const persons = res.data;\n        // this.setState({temp: res });\n      })\n  }\n}\n\n\n  render() {\n   \n    return (\n      <div>{this.state.temp} °C </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Weather from './Weather'\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} external={externalCloseBtn}>\n          <ModalHeader><Weather city={this.props.city}/> </ModalHeader>\n          <ModalBody>\n            <b></b><br />\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Popup;","\nimport './App.css';\n\nimport React, { Component } from 'react'\nimport { Card, CardTitle, CardText, CardImg, CardImgOverlay, Col, Row } from 'reactstrap';\nimport './App.css';\nimport Clock from './Clock'\nimport Popup from './Popup'\n\n// import Img from './Img'\n\n\n\nexport default class City extends Component {\n  \n  render() {\n    \n\n    let img = this.props.cities.map(city => {\n      \n      return <Col md={3} key={city.id} >\n      \n      <Card inverse style={{margin: '15px 0'}}  >\n      \n    <CardImg width=\"100%\" height= '220px' src={city.pic} alt=\"Card image cap\" />\n      <CardImgOverlay>\n        <Popup city={city.city}/>\n        <CardTitle style={{textShadow: '0px 0px 6px #000000', textAlign: 'Center', fontSize: '30px'}} >{city.city}</CardTitle>\n        <CardText style={{textShadow: '0px 0px 6px #000000', textAlign: 'Center', fontSize: '30px'}}><Clock time={city.time}/></CardText>\n        {/* <CardText>\n          <small className=\"text-muted\">Last updated 3 mins ago</small>\n        </CardText> */}\n      </CardImgOverlay>\n    </Card>\n      </Col>\n\n   });\n  //  <Img key={img.id} src={img.pic} alt=\"\" />\n    return (\n\n      <div className='cardHolder'>\n      <Row>\n        {img}\n      </Row>\n        \n        \n        {/* <Img cities={this.props.cities} /> */}\n      </div>\n    )\n  }\n}\n\n// const Example = (props) => {\n//   return (\n//     <div>\n//       <Card inverse>\n//         <CardImg width=\"100%\" src={img.pic} alt=\"Card image cap\" />\n//         <CardImgOverlay>\n//           <CardTitle>Card Title</CardTitle>\n//           <CardText>This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</CardText>\n//           <CardText>\n//             <small className=\"text-muted\">Last updated 3 mins ago</small>\n//           </CardText>\n//         </CardImgOverlay>\n//       </Card>\n//     </div>\n//   );\n// };\n\n// export default Example;\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n// import './App.css';\n// // import Img from './Img'\n// import { Card, CardImg, CardText, CardBody,\n//   CardTitle, CardSubtitle, Button } from 'reactstrap';\n\n\n\n// export default class City extends Component {\n//   render() {\n//     let img = this.props.cities.map(img => {\n      \n//       return <Card className='cards' key={img.id}>\n\n//       <CardImg top width=\"100%\"   src={img.pic} alt=\"Card cap\" />\n//       <CardBody>\n//         <CardTitle>Card title</CardTitle>\n//         <CardSubtitle>Card subtitle</CardSubtitle>\n//         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//         <Button>Button</Button>\n//       </CardBody>\n//     </Card>\n\n//    });\n//   //  <Img key={img.id} src={img.pic} alt=\"\" />\n//     return (\n\n//       <div className='cardHolder'>\n//         {img}\n        \n//         {/* <Img cities={this.props.cities} /> */}\n//       </div>\n//     )\n//   }\n// }\n","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n//   UncontrolledDropdown,\n//   DropdownToggle,\n//   DropdownMenu,\n//   DropdownItem \n} from 'reactstrap';\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"\" style={{backgroundColor: '#FF3F3F', letterSpacing:'2px', fontFamily: 'Helvetica'}} light expand=\"md\">\n          <img src='https://i.imgur.com/QNcUZpX.png' alt='logo' style={{height: '50px',width:'50px', margin:'0 20px'}}/>\n          <NavbarBrand href=\"/\" style={{color: '#F1F0F1', fontWeight: 'Bold'}} >Paper Rocket</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"https://en.wikipedia.org/wiki/Mahatma_Gandhi\">About Me</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/iomaraa\">GitHub</NavLink>\n              </NavItem>\n              {/* <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Option 1\n                  </DropdownItem>\n                  <DropdownItem>\n                    Option 2\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Reset\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown> */}\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport cities from './DB'\nimport City from './City'\nimport Header from './Header';\nimport Weather from './Weather'\nimport Popup from './Popup';\n\n// import Cards from './Cards';\n\n\n\nclass App extends Component {\nstate= {\n  cities: cities\n}\n\n  render() {\n    \n    return (\n      <div>\n      <Header/>\n  \n<div className='cardHolder' style={{backgroundColor: '',  margin: '20px'}}>\n\n  \n      <City cities={this.state.cities}/>\n      <Weather cities={this.state.cities}/>\n      </div>\n    \n\n\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}